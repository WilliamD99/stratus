---
import { Image } from "astro:assets";
import heroImage from "@/assets/hero.jpg"; // Using hero.jpg as lobby background, you can change this later
---

<section
  id="janitorial-services"
  class="relative w-full py-16 sm:py-20 lg:py-24 xl:py-28 overflow-hidden"
>
  <!-- Background Image with Parallax -->
  <div class="absolute inset-0 parallax-container">
    <div class="parallax-element grayscale-75">
      <Image
        src={heroImage}
        alt="Beautiful high-rise building lobby"
        class="w-full h-[140%] object-cover"
        loading="lazy"
      />
    </div>
    <!-- Dark overlay for better text readability -->
    <div
      class="absolute inset-0 bg-gradient-to-b from-slate-gray/90 via-slate-gray/95 to-black/90 z-10"
    >
    </div>
  </div>

  <!-- Content -->
  <div
    class="relative z-20 max-w-7xl 2xl:max-w-[100rem] mx-auto px-4 sm:px-6 lg:px-8"
  >
    <div class="max-w-4xl mx-auto text-center">
      <!-- Company Name -->
      <div class="mb-6">
        <h2
          class="text-4xl sm:text-5xl lg:text-6xl font-bold text-white mb-4 tracking-tight drop-shadow-lg"
        >
          Janitorial Services for Strata Corporations
        </h2>

        <!-- Description -->
        <p
          class="text-lg sm:text-xl text-white/90 leading-relaxed mb-12 drop-shadow-sm"
        >
          We specialize in providing janitorial services for high-rise and
          mid-rise buildings
        </p>
      </div>

      <!-- Credentials Grid -->
      <div
        class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 lg:gap-8"
      >
        <!-- WorkSafe BC -->
        <div
          class="bg-white/15 backdrop-blur-sm rounded-xl p-6 border border-white/30 hover:bg-white/20 transition-all duration-300 shadow-lg"
        >
          <div class="flex flex-col items-center text-center space-y-3">
            <div
              class="w-12 h-12 bg-stratus-blue rounded-full flex items-center justify-center"
            >
              <svg
                class="w-6 h-6 text-white"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path
                  fill-rule="evenodd"
                  d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                  clip-rule="evenodd"></path>
              </svg>
            </div>
            <h4 class="text-white font-semibold text-lg">WorkSafe BC</h4>
            <p class="text-white/80 text-sm">Compliant</p>
          </div>
        </div>

        <!-- Liability Insurance -->
        <div
          class="bg-white/15 backdrop-blur-sm rounded-xl p-6 border border-white/30 hover:bg-white/20 transition-all duration-300 shadow-lg"
        >
          <div class="flex flex-col items-center text-center space-y-3">
            <div
              class="w-12 h-12 bg-emerald-green rounded-full flex items-center justify-center"
            >
              <svg
                class="w-6 h-6 text-white"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path d="M4 4a2 2 0 00-2 2v1h16V6a2 2 0 00-2-2H4z"></path>
                <path
                  fill-rule="evenodd"
                  d="M18 9H2v5a2 2 0 002 2h12a2 2 0 002-2V9zM4 13a1 1 0 011-1h1a1 1 0 110 2H5a1 1 0 01-1-1zm5-1a1 1 0 100 2h1a1 1 0 100-2H9z"
                  clip-rule="evenodd"></path>
              </svg>
            </div>
            <h4 class="text-white font-semibold text-lg">5 Million</h4>
            <p class="text-white/80 text-sm">Liability Insurance</p>
          </div>
        </div>

        <!-- APPA Standards -->
        <div
          class="bg-white/15 backdrop-blur-sm rounded-xl p-6 border border-white/30 hover:bg-white/20 transition-all duration-300 shadow-lg"
        >
          <div class="flex flex-col items-center text-center space-y-3">
            <div
              class="w-12 h-12 bg-stratus-blue rounded-full flex items-center justify-center"
            >
              <svg
                class="w-6 h-6 text-white"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path
                  fill-rule="evenodd"
                  d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
                  clip-rule="evenodd"></path>
              </svg>
            </div>
            <h4 class="text-white font-semibold text-lg">APPA</h4>
            <p class="text-white/80 text-sm">Cleaning Standards</p>
          </div>
        </div>

        <!-- WHMIS Certified -->
        <div
          class="bg-white/15 backdrop-blur-sm rounded-xl p-6 border border-white/30 hover:bg-white/20 transition-all duration-300 shadow-lg"
        >
          <div class="flex flex-col items-center text-center space-y-3">
            <div
              class="w-12 h-12 bg-emerald-green rounded-full flex items-center justify-center"
            >
              <svg
                class="w-6 h-6 text-white"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
            <h4 class="text-white font-semibold text-lg">WHMIS</h4>
            <p class="text-white/80 text-sm">Certified Janitors</p>
          </div>
        </div>
      </div>

      <!-- Decorative elements -->
      <div
        class="absolute top-8 left-8 w-16 h-16 bg-stratus-blue/20 rounded-full blur-xl"
      >
      </div>
      <div
        class="absolute bottom-8 right-8 w-20 h-20 bg-emerald-green/20 rounded-full blur-xl"
      >
      </div>
    </div>
  </div>
</section>

<style>
  @import "tailwindcss/theme" theme(reference);
  @import "@/styles/tailwind-theme.css" theme(reference);

  /* Parallax Effect Styles */
  .parallax-container {
    overflow: hidden;
  }

  .parallax-element {
    position: absolute;
    top: -20%;
    left: 0;
    width: 100%;
    height: 140%;
    will-change: transform;
    transform: translate3d(0, 0, 0);
    backface-visibility: hidden;
    perspective: 1000px;
  }

  /* Disable parallax on mobile for better performance */
  @media (max-width: 768px) {
    .parallax-element {
      position: static;
      top: 0;
      height: 100%;
      transform: none !important;
    }
  }
</style>

<!-- GSAP Local Imports -->
<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  // Register ScrollTrigger plugin
  gsap.registerPlugin(ScrollTrigger);

  // GSAP Parallax effect implementation
  function initGSAPParallax() {
    // Check if user prefers reduced motion
    const prefersReducedMotion = window.matchMedia(
      "(prefers-reduced-motion: reduce)"
    ).matches;

    // Skip parallax on mobile or if user prefers reduced motion
    if (window.innerWidth <= 768 || prefersReducedMotion) {
      return;
    }

    // Select all parallax elements
    const parallaxElements = document.querySelectorAll(".parallax-element");

    if (parallaxElements.length === 0) {
      return;
    }

    parallaxElements.forEach((element) => {
      const section = element.closest("section");
      if (!section) return;

      // Create GSAP parallax animation with more noticeable movement
      gsap.fromTo(
        element,
        {
          y: "-20%", // Increased start position for more dramatic effect
        },
        {
          y: "20%", // Increased end position for more dramatic effect
          ease: "none", // Linear movement for parallax
          scrollTrigger: {
            trigger: section,
            start: "top bottom", // Start when section top hits bottom of viewport
            end: "bottom top", // End when section bottom hits top of viewport
            scrub: 0.3, // Faster response for more noticeable movement
            invalidateOnRefresh: true, // Recalculate on window resize
            markers: false, // Disabled debug markers
          },
        }
      );
    });

    // Refresh ScrollTrigger on window resize
    window.addEventListener("resize", () => {
      ScrollTrigger.refresh();
    });
  }

  // Initialize when DOM is loaded
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initGSAPParallax);
  } else {
    initGSAPParallax();
  }

  // Re-initialize on page navigation (for SPA behavior)
  document.addEventListener("astro:page-load", () => {
    // Kill existing ScrollTriggers to prevent conflicts
    const triggers = ScrollTrigger.getAll();
    triggers.forEach((trigger: any) => trigger.kill());

    // Reinitialize after a short delay
    setTimeout(() => {
      initGSAPParallax();
    }, 200);
  });
</script>
